name: main branch - build, test and publish to AWS

on:
  workflow_dispatch: 
  push:
    branches:
      - 'main'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '3.1.x'
      - name: Install dependencies
        run: dotnet restore ./WordleEngine/src/WordleEngine/WordleEngine.sln
      - name: Build
        run: dotnet build ./WordleEngine/src/WordleEngine/WordleEngine.sln --configuration Release --no-restore
      - name: Test
        run: dotnet test ./WordleEngine/test/WordleEngine.Tests/WordleEngine.Tests.csproj --no-restore --verbosity normal --logger trx --results-directory "TestResults"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-results
          path: TestResults
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Zip up build output
        run: zip -r -j WordleEngine.zip ./WordleEngine/src/WordleEngine/bin/Release/netcoreapp3.1
      - name: deploy to AWS
        uses: yvesgurcan/deploy-lambda-function@master
        with:
          package: WordleEngine.zip
          function-name: WordleEngine
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_SECRET_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}